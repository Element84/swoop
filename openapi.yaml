components:
  schemas:
    APIException:
      properties:
        detail:
          title: Detail
          type: string
        instance:
          anyOf:
          - type: string
          - type: 'null'
          title: Instance
        status:
          title: Status
          type: integer
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
        type:
          anyOf:
          - type: string
          - type: 'null'
          title: Type
      required:
      - status
      - detail
      title: APIException
      type: object
    Bbox:
      properties:
        bbox:
          items:
            type: number
          title: Bbox
          type: array
        crs:
          anyOf:
          - $ref: '#/components/schemas/Crs'
          - type: 'null'
          default: http://www.opengis.net/def/crs/OGC/1.3/CRS84
      required:
      - bbox
      title: Bbox
      type: object
    ConfClasses:
      properties:
        conformsTo:
          items:
            type: string
          title: Conformsto
          type: array
        links:
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
      required:
      - conformsTo
      - links
      title: ConfClasses
      type: object
    Crs:
      enum:
      - http://www.opengis.net/def/crs/OGC/1.3/CRS84
      - http://www.opengis.net/def/crs/OGC/0/CRS84h
      title: Crs
      type: string
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    InputDescription:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        keywords:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Keywords
        maxOccurs:
          anyOf:
          - minimum: 0.0
            type: integer
          - $ref: '#/components/schemas/MaxOccur'
          default: unbounded
          title: Maxoccurs
        metadata:
          anyOf:
          - items:
              $ref: '#/components/schemas/Metadata'
            type: array
          - type: 'null'
          title: Metadata
        minOccurs:
          default: 1
          minimum: 0.0
          title: Minoccurs
          type: integer
        schema:
          $ref: '#/components/schemas/Reference'
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
      required:
      - schema
      title: InputDescription
      type: object
    Invalid:
      properties:
        invalidAfter:
          anyOf:
          - format: date-time
            type: string
          - const: now
          title: Invalidafter
      required:
      - invalidAfter
      title: Invalid
      type: object
    JobControlOptions:
      const: async-execute
      title: JobControlOptions
      type: string
    JobList:
      properties:
        jobs:
          items:
            $ref: '#/components/schemas/StatusInfo'
          title: Jobs
          type: array
        links:
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
      required:
      - jobs
      - links
      title: JobList
      type: object
    LandingPage:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          example: Example server implementing the OGC API - Processes 1.0 Standard
          title: Description
        links:
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
        title:
          anyOf:
          - type: string
          - type: 'null'
          example: Example processing server
          title: Title
      required:
      - links
      title: LandingPage
      type: object
    Link:
      properties:
        href:
          format: uri
          minLength: 1
          title: Href
          type: string
        hreflang:
          anyOf:
          - type: string
          - type: 'null'
          title: Hreflang
        rel:
          anyOf:
          - type: string
          - type: 'null'
          title: Rel
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
        type:
          anyOf:
          - type: string
          - type: 'null'
          title: Type
      required:
      - href
      title: Link
      type: object
    MaxOccur:
      const: unbounded
      title: MaxOccur
      type: string
    Metadata:
      properties:
        href:
          anyOf:
          - type: string
          - type: 'null'
          title: Href
        role:
          anyOf:
          - type: string
          - type: 'null'
          title: Role
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
      title: Metadata
      type: object
    OutputDescription:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        keywords:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Keywords
        metadata:
          anyOf:
          - items:
              $ref: '#/components/schemas/Metadata'
            type: array
          - type: 'null'
          title: Metadata
        schema:
          $ref: '#/components/schemas/Reference'
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
      required:
      - schema
      title: OutputDescription
      type: object
    Payload:
      properties:
        features:
          default: []
          items: {}
          title: Features
          type: array
        process:
          items:
            anyOf:
            - $ref: '#/components/schemas/ProcessDefinition'
            - items:
                $ref: '#/components/schemas/ProcessDefinition'
              type: array
          minItems: 1
          title: Process
          type: array
        type:
          default: FeatureCollection
          title: Type
          type: string
      required:
      - process
      title: Payload
      type: object
    PayloadCacheEntry:
      properties:
        id:
          format: uuid5
          title: Id
          type: string
        invalidAfter:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Invalidafter
        links:
          default: []
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
        processID:
          title: Processid
          type: string
      required:
      - id
      - processID
      - invalidAfter
      title: PayloadCacheEntry
      type: object
    PayloadCacheList:
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
        payloads:
          items:
            $ref: '#/components/schemas/PayloadCacheEntry'
          title: Payloads
          type: array
      required:
      - payloads
      - links
      title: PayloadCacheList
      type: object
    Process:
      properties:
        cacheKeyHashExcludes:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Cachekeyhashexcludes
        cacheKeyHashIncludes:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Cachekeyhashincludes
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        handlerType:
          title: Handlertype
          type: string
        id:
          title: Id
          type: string
        inputs:
          anyOf:
          - additionalProperties:
              $ref: '#/components/schemas/InputDescription'
            type: object
          - type: 'null'
          title: Inputs
        jobControlOptions:
          anyOf:
          - items:
              $ref: '#/components/schemas/JobControlOptions'
            type: array
          - type: 'null'
          default:
          - async-execute
          title: Jobcontroloptions
        keywords:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Keywords
        links:
          default: []
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
        metadata:
          anyOf:
          - items:
              $ref: '#/components/schemas/Metadata'
            type: array
          - type: 'null'
          title: Metadata
        outputs:
          anyOf:
          - additionalProperties:
              $ref: '#/components/schemas/OutputDescription'
            type: object
          - type: 'null'
          title: Outputs
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
        version:
          title: Version
          type: string
      required:
      - id
      - version
      - handlerType
      title: Process
      type: object
    ProcessDefinition:
      additionalProperties: true
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        tasks:
          default: {}
          title: Tasks
          type: object
        upload_options:
          $ref: '#/components/schemas/UploadOptions'
        workflow:
          title: Workflow
          type: string
      required:
      - upload_options
      - workflow
      title: ProcessDefinition
      type: object
    ProcessList:
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
        processes:
          items:
            $ref: '#/components/schemas/ProcessSummary'
          title: Processes
          type: array
      required:
      - processes
      - links
      title: ProcessList
      type: object
    ProcessSummary:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        handlerType:
          title: Handlertype
          type: string
        id:
          title: Id
          type: string
        jobControlOptions:
          anyOf:
          - items:
              $ref: '#/components/schemas/JobControlOptions'
            type: array
          - type: 'null'
          default:
          - async-execute
          title: Jobcontroloptions
        keywords:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Keywords
        links:
          default: []
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
        metadata:
          anyOf:
          - items:
              $ref: '#/components/schemas/Metadata'
            type: array
          - type: 'null'
          title: Metadata
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
        version:
          title: Version
          type: string
      required:
      - id
      - version
      - handlerType
      title: ProcessSummary
      type: object
    QualifiedInputValue:
      properties:
        encoding:
          anyOf:
          - type: string
          - type: 'null'
          title: Encoding
        mediaType:
          anyOf:
          - type: string
          - type: 'null'
          title: Mediatype
        schema:
          anyOf:
          - type: string
          - type: object
          - type: 'null'
          title: Schema
        value:
          $ref: '#/components/schemas/RootModel_Union_RootModel_Union_str__float__int__bool__list_str___RootModel_str___Bbox____dict_str__Any___'
      required:
      - value
      title: QualifiedInputValue
      type: object
    Reference:
      additionalProperties: false
      properties:
        $ref:
          title: $Ref
          type: string
      required:
      - $ref
      title: Reference
      type: object
    RootModel_Union_RootModel_Union_str__float__int__bool__list_str___RootModel_str___Bbox____QualifiedInputValue__Link__:
      anyOf:
      - $ref: '#/components/schemas/RootModel_Union_str__float__int__bool__list_str___RootModel_str___Bbox__'
      - $ref: '#/components/schemas/QualifiedInputValue'
      - $ref: '#/components/schemas/Link'
      title: RootModel[Union[RootModel[Union[str, float, int, bool, list[str], RootModel[str],
        Bbox]], QualifiedInputValue, Link]]
    RootModel_Union_RootModel_Union_str__float__int__bool__list_str___RootModel_str___Bbox____dict_str__Any___:
      anyOf:
      - $ref: '#/components/schemas/RootModel_Union_str__float__int__bool__list_str___RootModel_str___Bbox__'
      - type: object
      title: RootModel[Union[RootModel[Union[str, float, int, bool, list[str], RootModel[str],
        Bbox]], dict[str, Any]]]
    ? RootModel_Union_dict_str__RootModel_Union_RootModel_Union_str__float__int__bool__list_str___RootModel_str___Bbox____QualifiedInputValue__Link_____NoneType__
    : anyOf:
      - additionalProperties:
          $ref: '#/components/schemas/RootModel_Union_RootModel_Union_str__float__int__bool__list_str___RootModel_str___Bbox____QualifiedInputValue__Link__'
        type: object
      - type: 'null'
      title: RootModel[Union[dict[str, RootModel[Union[RootModel[Union[str, float,
        int, bool, list[str], RootModel[str], Bbox]], QualifiedInputValue, Link]]],
        NoneType]]
    RootModel_Union_str__float__int__bool__list_str___RootModel_str___Bbox__:
      anyOf:
      - type: string
      - type: number
      - type: integer
      - type: boolean
      - items:
          type: string
        type: array
      - $ref: '#/components/schemas/RootModel_str_'
      - $ref: '#/components/schemas/Bbox'
      title: RootModel[Union[str, float, int, bool, list[str], RootModel[str], Bbox]]
    RootModel_str_:
      title: RootModel[str]
      type: string
    StatusCode:
      enum:
      - accepted
      - running
      - successful
      - failed
      - dismissed
      title: StatusCode
      type: string
    StatusInfo:
      properties:
        created:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Created
        finished:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Finished
        jobID:
          format: uuid
          title: Jobid
          type: string
        links:
          default: []
          items:
            $ref: '#/components/schemas/Link'
          title: Links
          type: array
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
        processID:
          title: Processid
          type: string
        started:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Started
        status:
          $ref: '#/components/schemas/StatusCode'
        type:
          $ref: '#/components/schemas/Type'
        updated:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: Updated
      required:
      - processID
      - type
      - jobID
      - status
      title: StatusInfo
      type: object
    SwoopStatusCode:
      enum:
      - PENDING
      - QUEUED
      - RUNNING
      - SUCCESSFUL
      - FAILED
      - CANCELED
      - TIMED_OUT
      - UNKNOWN
      - BACKOFF
      - INVALID
      - RETRIES_EXHAUSTED
      title: SwoopStatusCode
      type: string
    Type:
      const: process
      title: Type
      type: string
    UploadOptions:
      additionalProperties: true
      properties:
        collections:
          title: Collections
          type: object
        path_template:
          title: Path Template
          type: string
      required:
      - path_template
      - collections
      title: UploadOptions
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  title: swoop-api
  version: 0.1.0
openapi: 3.1.0
paths:
  /:
    get:
      description: landing page of this API
      operationId: get_landing_page__get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandingPage'
          description: Successful Response
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Internal Server Error
      summary: Get Landing Page
      tags:
      - Capabilities
  /cache:
    get:
      description: Returns a list of cached input payloads and the association with
        workflow executions
      operationId: list_input_payload_cache_entries_cache_get
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          default: 1000
          minimum: 1
          title: Limit
          type: integer
      - in: query
        name: processID
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Processid
      - in: query
        name: lastID
        required: false
        schema:
          anyOf:
          - format: uuid
            type: string
          - type: 'null'
          title: Lastid
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadCacheList'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: List Input Payload Cache Entries
      tags:
      - Payloads
  /cache/:
    post:
      description: Retrieves details of cached input payload via a payload hash lookup
      operationId: retrieve_payload_cache_entry_by_payload_input_cache__post
      requestBody:
        content:
          application/json:
            schema:
              title: Body
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadCacheEntry'
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Internal Server Error
      summary: Retrieve Payload Cache Entry By Payload Input
      tags:
      - Payloads
  /cache/{payloadID}:
    get:
      description: Retrieve details of cached input payload by payloadID
      operationId: get_input_payload_cache_entry_cache__payloadID__get
      parameters:
      - in: path
        name: payloadID
        required: true
        schema:
          format: uuid
          title: Payloadid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadCacheEntry'
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Internal Server Error
      summary: Get Input Payload Cache Entry
      tags:
      - Payloads
  /cache/{payloadID}/invalidate:
    post:
      description: Set invalidAfter property on a payload cache entry
      operationId: update_input_payload_cache_entry_invalidation_cache__payloadID__invalidate_post
      parameters:
      - in: path
        name: payloadID
        required: true
        schema:
          format: uuid
          title: Payloadid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invalid'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Unprocessable Entity
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Internal Server Error
      summary: Update Input Payload Cache Entry Invalidation
      tags:
      - Payloads
  /conformance:
    get:
      description: information about standards that this API conforms to
      operationId: get_conformance_classes_conformance_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfClasses'
          description: Successful Response
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Internal Server Error
      summary: Get Conformance Classes
      tags:
      - ConformanceDeclaration
  /jobs:
    get:
      description: Returns a list of all available workflow executions
      operationId: list_workflow_executions_jobs_get
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          default: 1000
          minimum: 1
          title: Limit
          type: integer
      - in: query
        name: processID
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Processid
      - in: query
        name: jobID
        required: false
        schema:
          anyOf:
          - items:
              format: uuid
              type: string
            type: array
          - type: 'null'
          title: Jobid
      - in: query
        name: type
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Type
      - in: query
        name: status
        required: false
        schema:
          items:
            $ref: '#/components/schemas/StatusCode'
          title: Status
          type: array
      - in: query
        name: swoopStatus
        required: false
        schema:
          items:
            $ref: '#/components/schemas/SwoopStatusCode'
          title: Swoopstatus
          type: array
      - in: query
        name: datetime
        required: false
        schema:
          title: Datetime
          type: string
      - in: query
        name: minDuration
        required: false
        schema:
          title: Minduration
          type: integer
      - in: query
        name: maxDuration
        required: false
        schema:
          title: Maxduration
          type: integer
      - in: query
        name: lastID
        required: false
        schema:
          anyOf:
          - format: uuid
            type: string
          - type: 'null'
          title: Lastid
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobList'
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Unprocessable Entity
      summary: List Workflow Executions
      tags:
      - Jobs
  /jobs/{jobID}:
    get:
      description: Returns workflow execution status by jobID
      operationId: get_workflow_execution_details_jobs__jobID__get
      parameters:
      - in: path
        name: jobID
        required: true
        schema:
          format: uuid
          title: Jobid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusInfo'
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Internal Server Error
      summary: Get Workflow Execution Details
      tags:
      - Jobs
  /jobs/{jobID}/inputs:
    get:
      description: Retrieves workflow execution input payload by jobID
      operationId: get_workflow_execution_inputs_jobs__jobID__inputs_get
      parameters:
      - in: path
        name: jobID
        required: true
        schema:
          title: Jobid
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Get Workflow Execution Inputs Jobs  Jobid  Inputs
                  Get
                type: object
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Internal Server Error
      summary: Get Workflow Execution Inputs
      tags:
      - Jobs
  /jobs/{jobID}/results:
    get:
      description: Retrieves workflow execution output by jobID
      operationId: get_workflow_execution_result_jobs__jobID__results_get
      parameters:
      - in: path
        name: jobID
        required: true
        schema:
          title: Jobid
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootModel_Union_dict_str__RootModel_Union_RootModel_Union_str__float__int__bool__list_str___RootModel_str___Bbox____QualifiedInputValue__Link_____NoneType__'
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Internal Server Error
      summary: Get Workflow Execution Result
      tags:
      - Jobs
  /jobs/{jobID}/results/payload:
    get:
      description: Retrieves workflow execution output payload by jobID
      operationId: get_workflow_execution_result_payload_jobs__jobID__results_payload_get
      parameters:
      - in: path
        name: jobID
        required: true
        schema:
          title: Jobid
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payload'
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Internal Server Error
      summary: Get Workflow Execution Result Payload
      tags:
      - Jobs
  /processes:
    get:
      description: Returns a list of all available workflows
      operationId: list_workflows_processes_get
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          default: 1000
          minimum: 1
          title: Limit
          type: integer
      - in: query
        name: handler
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Handler
      - in: query
        name: type
        required: false
        schema:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Type
      - in: query
        name: lastID
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Lastid
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessList'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: List Workflows
      tags:
      - Processes
  /processes/{processID}:
    get:
      description: Returns workflow details by processID
      operationId: get_workflow_description_processes__processID__get
      parameters:
      - in: path
        name: processID
        required: true
        schema:
          title: Processid
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Internal Server Error
      summary: Get Workflow Description
      tags:
      - Processes
  /processes/{processID}/execution:
    post:
      description: Starts a workflow execution (Job)
      operationId: execute_workflow_processes__processID__execution_post
      parameters:
      - in: path
        name: processID
        required: true
        schema:
          title: Processid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              title: Body
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusInfo'
          description: Successful Response
        '303':
          description: See existing job
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Unprocessable Entity
      summary: Execute Workflow
      tags:
      - Processes
  /processes/{processID}/inputsschema:
    get:
      description: Returns process input jsonschema by processID
      operationId: get_process_inputs_schema_processes__processID__inputsschema_get
      parameters:
      - in: path
        name: processID
        required: true
        schema:
          title: Processid
      responses:
        '200':
          content:
            application/json:
              schema: {}
            application/schema+json: {}
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Internal Server Error
      summary: Get Process Inputs Schema
      tags:
      - Processes
  /processes/{processID}/outputsschema:
    get:
      description: Returns workflow input jsonschema by processID
      operationId: get_process_outputs_schema_processes__processID__outputsschema_get
      parameters:
      - in: path
        name: processID
        required: true
        schema:
          title: Processid
      responses:
        '200':
          content:
            application/json:
              schema: {}
            application/schema+json: {}
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIException'
          description: Internal Server Error
      summary: Get Process Outputs Schema
      tags:
      - Processes
